# Details about the install.yaml file are at https://ddev.readthedocs.io/en/stable/users/extend/additional-services/#sections-and-features-of-ddev-get-add-on-installyaml

name: ddev-playwright

# pre_install_actions - list of actions to run before installing the addon.
# Examples would be removing an extraneous docker volume,
# or doing a sanity check for requirements.
# DDEV environment variables can be interpolated into these actions
# pre_install_actions are executed in the context of the target project's root directory.
pre_install_actions:
  - |
    #ddev-description:Check if the addon is compatible with this DDEV version
    if ! ( ddev version | grep -E "v1\.(2[1-9]|[3-9][0-9])" >/dev/null 2>&1 ) ; then
      echo "This add-on requires DDEV v1.21+ or higher, please upgrade." && exit 2
    fi

# list of files and directories listed that are copied into project .ddev directory
# Each file should contain #ddev-generated so it can be replaced by a later `ddev add-on get`
# if it hasn't been modified by the user.
# DDEV environment variables can be interpolated into these filenames
# If you use directories, they must be directories that are managed
# by this add-on, or removal could remove things that are not owned by it
project_files:
  - config.playwright.yaml
  - commands/web/playwright
  - examples

# List of files and directories that are copied into the global .ddev directory
# DDEV environment variables can be interpolated into these filenames
# Note that if these files are used by a team, you will need to automate their installation
# by adding `ddev add-on get` to your workflow to ensure that everyone has them.
# Otherwise, use 'project_files' to commit them to the repository.
global_files:
  # - commands/web/add-on-command
  # - homeadditions/some-file.txt

# Version constraint for DDEV that will be validated against the running DDEV executable
# and prevent add-on from being installed if it doesn't validate.
# See https://github.com/Masterminds/semver#checking-version-constraints for constraint rules.
# Available with DDEV v1.23.4+, and works only for DDEV v1.23.4+ binaries
# example: ddev_version_constraint: '>= v1.23.4'
ddev_version_constraint: ''

# List of add-on names that this add-on depends on
dependencies:
  # - redis

# DDEV environment variables can be interpolated into these actions.
# post_install_actions are executed in the context of the target project's .ddev directory.
post_install_actions:
  - chmod +x commands/web/playwright
  - |
    #ddev-description:Copy examples to project if they don't exist
    if [ ! -d "${DDEV_APPROOT}/test/playwright" ]; then
      mkdir -p "${DDEV_APPROOT}/test/playwright"
      cp -r examples/* "${DDEV_APPROOT}/test/playwright/"
      echo "Copied Playwright example tests to ${DDEV_APPROOT}/test/playwright/"
    else
      echo "Example tests not copied because ${DDEV_APPROOT}/test/playwright/ already exists"
      echo "You can find example tests in the .ddev/examples directory"
    fi
  - |
    #ddev-description:Provide instructions after installation
    echo "Playwright addon has been installed."
    echo "Playwright will be automatically installed when first used."
    echo ""
    echo "To run Playwright tests:"
    echo "  ddev playwright test"
    echo ""
    echo "To install Playwright browsers manually:"
    echo "  ddev playwright install"
    echo ""
    echo "To view HTML reports:"
    echo "  ddev playwright show-report --host=0.0.0.0 --port=9323"
    echo "  Then visit: http://${DDEV_HOSTNAME}:9323"
    echo ""
    echo "HTTPS Support:"
    echo "  Tests automatically support both HTTP and HTTPS URLs"
    echo "  The baseURL uses DDEV_PRIMARY_URL (includes https://${DDEV_HOSTNAME})"
    echo ""
    echo "Example tests have been copied to test/playwright/"

# Shell actions that can be done during removal of the add-on.
# Files listed in project_files section will be automatically removed here if they contain #ddev-generated line.
# removal_actions are executed in the context of the target project's .ddev directory.
removal_actions:
  - |
    #ddev-description:Clean up Playwright installation
    echo "Playwright addon has been removed."
    echo "Note: Playwright binaries remain installed in the web container."
    echo "To completely remove Playwright, you may need to rebuild your web container."

# Advanced usage - YAML files can be read in and then used as go template actions
# in pre_install_actions and post_install_actions
# See example in
# https://github.com/ddev/ddev/blob/master/cmd/ddev/cmd/testdata/TestCmdAddonComplex/recipe/install.yaml
yaml_read_files:
  # someyaml: someyaml.yaml
  # otheryaml: someotheryaml.yaml
