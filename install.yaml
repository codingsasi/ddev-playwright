#ddev-generated
# Details about the install.yaml file are at https://ddev.readthedocs.io/en/stable/users/extend/additional-services/#sections-and-features-of-ddev-get-add-on-installyaml

name: ddev-playwright

# pre_install_actions - list of actions to run before installing the addon.
# Examples would be removing an extraneous docker volume,
# or doing a sanity check for requirements.
# DDEV environment variables can be interpolated into these actions
# pre_install_actions are executed in the context of the target project's root directory.
pre_install_actions:
  - |
    #ddev-description:Check if the addon is compatible with this DDEV version
    if ! ( ddev version | grep -E "v1\.(2[1-9]|[3-9][0-9])" >/dev/null 2>&1 ) ; then
      echo "This add-on requires DDEV v1.21+ or higher, please upgrade." && exit 2
    fi

# list of files and directories listed that are copied into project .ddev directory
# Each file should contain #ddev-generated so it can be replaced by a later `ddev add-on get`
# if it hasn't been modified by the user.
# DDEV environment variables can be interpolated into these filenames
# If you use directories, they must be directories that are managed
# by this add-on, or removal could remove things that are not owned by it
project_files:
  - config.playwright.yaml
  - commands/web/playwright
  - pw-examples

# List of files and directories that are copied into the global .ddev directory
# DDEV environment variables can be interpolated into these filenames
# Note that if these files are used by a team, you will need to automate their installation
# by adding `ddev add-on get` to your workflow to ensure that everyone has them.
# Otherwise, use 'project_files' to commit them to the repository.
global_files:
  # - commands/web/add-on-command
  # - homeadditions/some-file.txt

# Version constraint for DDEV that will be validated against the running DDEV executable
# and prevent add-on from being installed if it doesn't validate.
# See https://github.com/Masterminds/semver#checking-version-constraints for constraint rules.
# Available with DDEV v1.23.4+, and works only for DDEV v1.23.4+ binaries
# example: ddev_version_constraint: '>= v1.23.4'
ddev_version_constraint: ''

# List of add-on names that this add-on depends on
dependencies:
  # - redis

# DDEV environment variables can be interpolated into these actions.
# post_install_actions are executed in the context of the target project's .ddev directory.
post_install_actions:
  - chmod +x commands/web/playwright
  - |
    #ddev-description:Setup Playwright test environment
    echo "Setting up Playwright test environment..."

    # Create test/playwright directory if it doesn't exist
    if [ ! -d "${DDEV_APPROOT}/test/playwright" ]; then
      mkdir -p "${DDEV_APPROOT}/test/playwright"
      echo "Created ${DDEV_APPROOT}/test/playwright/ directory"
    fi
  - |
    #ddev-description:Initialize Playwright project with npm init
    echo "Initializing Playwright project..."

    # Use ddev exec to run commands in the web container (nvm already available)
    ddev exec bash -c "
      # Change to test directory
      cd /var/www/html/test/playwright

      # Initialize Playwright project non-interactively
      # This creates package.json, playwright.config.ts, and example tests
      nvm install 20
      nvm use 20
      npm init playwright@latest -- --quiet --yes --lang=TypeScript --no-browsers

      # Note: Browser installation can be done later with 'ddev playwright install' and 'ddev playwright install-deps'

      echo 'Playwright project initialized successfully!'
    " || echo "Note: Playwright initialization will occur on first test run"
  - |
    #ddev-description:Customize Playwright configuration for DDEV
    echo "Customizing Playwright configuration for DDEV..."

    # Copy our custom config to override the generated one
    if [ -f "${DDEV_APPROOT}/test/playwright/playwright.config.ts" ]; then
      cp pw-examples/playwright.config.ts "${DDEV_APPROOT}/test/playwright/playwright.config.ts"
      echo "Applied DDEV-optimized Playwright configuration"
    fi

    # Copy our custom example test
    if [ -f "${DDEV_APPROOT}/test/playwright/tests/example.spec.ts" ]; then
      cp pw-examples/example-test.spec.ts "${DDEV_APPROOT}/test/playwright/tests/example.spec.ts"
      echo "Applied DDEV-optimized example test"
    fi
  - |
    #ddev-description:Provide instructions after installation
    echo "Playwright addon has been installed and configured!"
    echo ""
    echo "Setup completed:"
    echo "  ✓ Node.js 20 installed and activated"
    echo "  ✓ Playwright project initialized with npm init playwright@latest"
    echo "  ✓ DDEV-optimized configuration applied"
    echo ""
    echo "Next steps:"
    echo "  1. ddev restart # if you haven't already"
    echo "  2. Install system dependencies: ddev playwright install-deps"
    echo "  3. Install browser binaries: ddev playwright install"
    echo "  4. Run your first test: ddev playwright test tests/example.spec.ts"
    echo ""
    echo "To run Playwright tests:"
    echo "  ddev playwright test"
    echo ""
    echo "To view HTML reports (The host 0.0.0.0 is required to view the report on ddev):"
    echo "  ddev playwright show-report --host=0.0.0.0"
    echo "  Then visit: http://${DDEV_HOSTNAME}:9323"
    echo ""
    echo "Your Playwright environment is ready to use!"

# Shell actions that can be done during removal of the add-on.
# Files listed in project_files section will be automatically removed here if they contain #ddev-generated line.
# removal_actions are executed in the context of the target project's .ddev directory.
removal_actions:
  - |
    #ddev-description:Clean up Playwright installation
    echo "Playwright addon has been removed."
    echo "Note: Playwright binaries remain installed in the web container."
    echo "To completely remove Playwright, you may need to rebuild your web container."
    rm -rf .ddev/pw-examples

# Advanced usage - YAML files can be read in and then used as go template actions
# in pre_install_actions and post_install_actions
# See example in
# https://github.com/ddev/ddev/blob/master/cmd/ddev/cmd/testdata/TestCmdAddonComplex/recipe/install.yaml
yaml_read_files:
  # someyaml: someyaml.yaml
  # otheryaml: someotheryaml.yaml
